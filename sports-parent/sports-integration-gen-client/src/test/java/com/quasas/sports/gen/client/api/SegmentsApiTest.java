/*
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.quasas.sports.gen.client.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import com.quasas.sports.gen.client.model.DetailedSegment;
import com.quasas.sports.gen.client.model.ExplorerResponse;
import com.quasas.sports.gen.client.model.SegmentLeaderboard;
import com.quasas.sports.gen.client.model.SummarySegment;

/**
 * API tests for SegmentsApi
 */
@Ignore
public class SegmentsApiTest {

    private final SegmentsApi api = new SegmentsApi();

    
    /**
     * Explore segments
     *
     * Returns the top 10 segments matching a specified query.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exploreSegmentsTest() {
        List<Float> bounds = null;
        String activityType = null;
        Integer minCat = null;
        Integer maxCat = null;
        ExplorerResponse response = api.exploreSegments(bounds, activityType, minCat, maxCat);

        // TODO: test validations
    }
    
    /**
     * Get Segment Leaderboard
     *
     * Returns the specified segment leaderboard.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLeaderboardBySegmentIdTest() {
        Long id = null;
        String gender = null;
        String ageGroup = null;
        String weightClass = null;
        Boolean following = null;
        Long clubId = null;
        String dateRange = null;
        Integer contextEntries = null;
        Integer page = null;
        Integer perPage = null;
        SegmentLeaderboard response = api.getLeaderboardBySegmentId(id, gender, ageGroup, weightClass, following, clubId, dateRange, contextEntries, page, perPage);

        // TODO: test validations
    }
    
    /**
     * List Starred Segments
     *
     * List of the authenticated athlete&#39;s starred segments. Private segments are filtered out unless requested by a token with read_all scope.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLoggedInAthleteStarredSegmentsTest() {
        Integer page = null;
        Integer perPage = null;
        List<SummarySegment> response = api.getLoggedInAthleteStarredSegments(page, perPage);

        // TODO: test validations
    }
    
    /**
     * Get Segment
     *
     * Returns the specified segment. read_all scope required in order to retrieve athlete-specific segment information, or to retrieve private segments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSegmentByIdTest() {
        Long id = null;
        DetailedSegment response = api.getSegmentById(id);

        // TODO: test validations
    }
    
    /**
     * Star Segment
     *
     * Stars/Unstars the given segment for the authenticated athlete. Requires profile:write scope.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void starSegmentTest() {
        Long id = null;
        Boolean starred = null;
        DetailedSegment response = api.starSegment(id, starred);

        // TODO: test validations
    }
    
}
