/*
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.quasas.sports.gen.client.api;


import org.junit.Ignore;
import org.junit.Test;

import com.quasas.sports.gen.client.model.ActivityStats;
import com.quasas.sports.gen.client.model.DetailedAthlete;
import com.quasas.sports.gen.client.model.Zones;

/**
 * API tests for AthletesApi
 */
@Ignore
@SuppressWarnings("unused")
public class AthletesApiTest {

    private final AthletesApi api = new AthletesApi();

    
    /**
     * Get Authenticated Athlete
     *
     * Returns the currently authenticated athlete. Tokens with profile:read_all scope will receive a detailed athlete representation; all others will receive a summary representation.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLoggedInAthleteTest() {
        DetailedAthlete response = api.getLoggedInAthlete();

        // TODO: test validations
    }
    
    /**
     * Get Zones
     *
     * Returns the the authenticated athlete&#39;s heart rate and power zones. Requires profile:read_all.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLoggedInAthleteZonesTest() {
        Zones response = api.getLoggedInAthleteZones();

        // TODO: test validations
    }
    
    /**
     * Get Athlete Stats
     *
     * Returns the activity stats of an athlete.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStatsTest() {
        Integer id = null;
        Integer page = null;
        Integer perPage = null;
        ActivityStats response = api.getStats(id, page, perPage);

        // TODO: test validations
    }
    
    /**
     * Update Athlete
     *
     * Update the currently authenticated athlete. Requires profile:write scope.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLoggedInAthleteTest() {
        Float weight = null;
        DetailedAthlete response = api.updateLoggedInAthlete(weight);

        // TODO: test validations
    }
    
}
